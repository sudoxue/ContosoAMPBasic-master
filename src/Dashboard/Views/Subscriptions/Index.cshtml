@using SaaSFulfillmentClient.Models
@model IEnumerable<SubscriptionViewModel>
@{
    ViewData["Title"] = "All Offer Subscriptions";
}
<div class="container-fluid">
    <h1>Subscriptions for all of the offers</h1>
    <br />
        <span class="anchor">Status filter: </span>
        <div class="d-inline-block">
            @foreach (var status in Enum.GetNames(typeof(StatusEnum)))
            {

                <input type="checkbox" class="statusCheckbox" id="@status" checked/> @status
            }
        </div>
    <table class="table table-sm w-auto text-xsmall">
        <thead class="thead-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.SubscriptionName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.State)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OfferId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PlanId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PurchaserEmail)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.PurchaserTenantId)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.SubscriptionId)
                </th>

                <th>Actions</th>
                <th>Pending operations</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="@item.State">
                    <td>
                        @Html.DisplayFor(modelItem => item.SubscriptionName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.State)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OfferId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PlanId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PurchaserEmail)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.PurchaserTenantId)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.SubscriptionId)
                    </td>

                    <td>
                        @if (!item.PendingOperations)
                        {
                            @foreach (var a in item.NextActions)
                            {
                                <span> @Html.ActionLink(Enum.GetName(typeof(ActionsEnum), a), "SubscriptionAction", new { subscriptionAction = a, subscriptionId = item.SubscriptionId }) </span>
                            }
                        }
                        else
                        {
                            <span>Pending operations</span>
                        }
                    </td>
                    <td>
                        @if (item.ExistingOperations)
                        {
                            @Html.ActionLink("Operations", "Operations", new { item.SubscriptionId })
                        }
                        
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>

<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    $(document).ready(function () {
        $(".statusCheckbox").change(function () {
            if (this.checked) {
                $("tr." + this.id).show();
            }
            else {
                $("tr." + this.id).hide();
            }
        });
    });
</script>
